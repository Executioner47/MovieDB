{"version":3,"sources":["useFetch.js","context.js","SearchForm.js","Movies.js","Home.js","SingleMovie.js","App.js","index.js"],"names":["useFetch","urlParams","useState","isLoading","setIsLoading","data","setData","fetchMovies","url","a","fetch","response","json","Response","Search","console","log","useEffect","AppContext","React","createContext","AppProvider","children","searchedWord","setSearchedWord","Provider","value","useGlobalContext","useContext","SearchForm","className","type","onChange","e","target","Movies","map","movie","to","imdbID","key","src","Poster","alt","Title","Year","Home","SingleMovie","id","useParams","Plot","Awards","Director","Genre","Actors","Runtime","imdbRating","xmlns","width","height","viewBox","fill","role","d","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69d3301b.chunk.js","sourcesContent":["import  { useState, useEffect } from 'react'\r\nconst API_ENDPOINT = `https://www.omdbapi.com/?apikey=b0337b7`\r\n\r\nconst useFetch = (urlParams) => {\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [data, setData] = useState([])\r\n  \r\n  const fetchMovies = async (url) => {\r\n    setIsLoading(true)\r\n    try {\r\n      const response = await fetch(url)\r\n      const data = await response.json()\r\n      if (data.Response === 'True') {\r\n        setData(data.Search || data)\r\n      }\r\n      setIsLoading(false)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    fetchMovies(`${API_ENDPOINT}${urlParams}`)\r\n  }, [urlParams])\r\n  return { isLoading, data }\r\n}\r\n\r\nexport default useFetch\r\n","import React, { useState, useContext } from 'react'\r\nimport useFetch from './useFetch'\r\n\r\nlet AppContext = React.createContext()\r\n\r\nlet AppProvider = ({ children }) => {\r\n  let [isLoading, setIsLoading] = useState(false)\r\n  let [searchedWord,setSearchedWord] = useState(\"batman\")\r\n  let {data} = useFetch(\"&s=\"+searchedWord)\r\n  \r\n  return <AppContext.Provider value={{data,isLoading,searchedWord,setIsLoading,setSearchedWord}}>{children}</AppContext.Provider>\r\n}\r\n\r\nexport let useGlobalContext = () => {\r\n  return useContext(AppContext)\r\n}\r\n\r\nexport { AppContext, AppProvider }\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./context\";\r\nconst SearchForm = () => {\r\n  let {searchedWord,setSearchedWord} = useGlobalContext()\r\n  return (\r\n    <form className=\"search-form\">\r\n      <h2>search movies</h2>\r\n      <input type=\"text\" className=\"form-input\" value={searchedWord} onChange={(e)=>{setSearchedWord(e.target.value)}}/>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./context\";\r\nimport { Link } from \"react-router-dom\";\r\nconst url = \"https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png\";\r\n\r\nconst Movies = () => {\r\n  let {data,isLoading} = useGlobalContext()\r\n  console.log(data)\r\n  if(isLoading){\r\n    return <div className='loading'></div>\r\n  }\r\n  return (\r\n    <section className=\"movies\">\r\n      {data.map((movie)=>{\r\n        return <Link className=\"movie\" to={`movies/${movie.imdbID}`} key={movie.imdbID}>\r\n        <article>\r\n          <img src={movie.Poster === \"N/A\" ? url : movie.Poster} alt={movie.Title} />\r\n          <div className=\"movie-info\">\r\n            <h4 className=\"title\">{movie.Title}</h4>\r\n            <p>{movie.Year}</p>\r\n          </div>\r\n        </article>\r\n      </Link>\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\nimport Form from \"./SearchForm\";\r\nimport Movies from \"./Movies\";\r\n\r\nconst Home = () => {\r\n  return <main>\r\n      <Form/>\r\n      <Movies />\r\n    </main>\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst SingleMovie = () => {\r\n  let { id } = useParams();\r\n  let { isLoading, data } = useFetch(\"&i=\" + id);\r\n  let {\r\n    Title,\r\n    Poster,\r\n    Plot,\r\n    Year,\r\n    Awards,\r\n    Director,\r\n    Genre,\r\n    Actors,\r\n    Runtime,\r\n    imdbRating,\r\n  } = data;\r\n  console.log(Awards);\r\n  console.log(data);\r\n  if (isLoading) {\r\n    return <div className=\"loading\"></div>;\r\n  }\r\n\r\n  return (\r\n    <section className=\"single-movie\">\r\n      <img src={Poster} alt=\"\" />\r\n      <div className=\"single-movie-info\">\r\n        <div className=\"header\">\r\n          <h2>{Title}</h2>\r\n          <div className=\"rating\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"ipc-icon ipc-icon--star sc-7ab21ed2-4 hLFdut\"\r\n              id=\"iconContext-star\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"currentColor\"\r\n              role=\"presentation\"\r\n            >\r\n              <path d=\"M12 17.27l4.15 2.51c.76.46 1.69-.22 1.49-1.08l-1.1-4.72 3.67-3.18c.67-.58.31-1.68-.57-1.75l-4.83-.41-1.89-4.46c-.34-.81-1.5-.81-1.84 0L9.19 8.63l-4.83.41c-.88.07-1.24 1.17-.57 1.75l3.67 3.18-1.1 4.72c-.2.86.73 1.54 1.49 1.08l4.15-2.5z\"></path>\r\n            </svg>\r\n            <span>{imdbRating}</span>/10\r\n          </div>\r\n        </div>\r\n          <div className=\"runtime\">{Runtime}  </div>\r\n        <p>{Plot}</p>\r\n        <div className=\"details\">\r\n          <div className=\"year\">\r\n            <span className=\"title\">Year: </span>\r\n            {Year}\r\n          </div>\r\n          <div className=\"genre\">\r\n            <span className=\"title\">Genre: </span>\r\n            {Genre}\r\n          </div>\r\n          <div className=\"actors\">\r\n            <span className=\"title\">Actors: </span>\r\n            {Actors}\r\n          </div>\r\n          <div className=\"director\">\r\n            <span className=\"title\">Director: </span>\r\n            {Director}\r\n          </div>\r\n          <div className=\"awards\">\r\n            <span className=\"title\">Awards: </span>\r\n            {Awards}\r\n          </div>\r\n        </div>\r\n        <Link className=\"btn\" to={\"/\"}>\r\n          Back To Movies\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SingleMovie;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\r\n\r\nimport Home from './Home'\r\nimport Movie from './SingleMovie'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<Home/>}></Route>\r\n          <Route path=\"movies/:id\" element={<Movie/>}></Route>\r\n        </Routes>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { AppProvider } from './context'\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppProvider>\r\n      <App />\r\n    </AppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}